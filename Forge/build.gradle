buildscript {
	repositories {
		maven { url "https://maven.minecraftforge.net" }
		maven {
			url "https://repo.spongepowered.org/repository/maven-public/"
			content { includeGroup "org.spongepowered" }
		}
		mavenCentral()
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:5.1.71"
		classpath "org.spongepowered:mixingradle:0.7-SNAPSHOT"
	}
}

evaluationDependsOn(":Xplat") //pls

apply plugin: "java"
apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

archivesBaseName = "${rootProject.name}-forge-1.20.1"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}
java.withSourcesJar()

mixin {
	//Tell mixingradle what filename the refmap should use
	add sourceSets.main, "${project.modName}.refmap.json"
	
	//Tell mixingradle which mixin configs exist
	config "${project.modName}.xplat.mixins.json"
	config "${project.modName}.forge.mixins.json"
}

repositories {
	maven {
		url "https://repo.spongepowered.org/repository/maven-public/"
		content { includeGroup "org.spongepowered" }
	}
	maven {
		url "https://maven.terraformersmc.com/"
		content { includeGroup "dev.emi" }
	}
	mavenCentral()
}

dependencies {
	minecraft "net.minecraftforge:forge:1.20.1-47.1.0"
	annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
	compileOnly "org.jetbrains:annotations:24.0.1"
	
	compileOnly project(":Xplat")

	compileOnly fg.deobf("dev.emi:emi-forge:1.0.8+1.20.1:api")
	testCompileOnly fg.deobf("dev.emi:emi-forge:1.0.8+1.20.1:api") //forgegradle is Weird episode 500
	runtimeOnly fg.deobf("dev.emi:emi-forge:1.0.8+1.20.1")
}

//fold in xplat resources and sources
processResources {
	from project(":Xplat").sourceSets.main.resources
	
	inputs.property "version", project.version
	filesMatching("**/mods.toml") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	source(project(":Xplat").sourceSets.main.allSource)
}

minecraft {
	mappings channel: "official", version: "1.20.1"
	
	runs {
		client {
			taskName "Client"
			workingDirectory project.file("run")
			ideaModule "${rootProject.name}.${project.name}.main"
			property "mixin.env.remapRefMap", "true" //emi haxx
			property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg" //emi haxx
			mods {
				"${project.modName}" {
					source sourceSets.main
					source project(":Xplat").sourceSets.main
				}
			}
		}
		
		server {
			taskName "Server"
			workingDirectory project.file("run")
			ideaModule "${rootProject.name}.${project.name}.main"
			mods {
				"${project.modName}" {
					source sourceSets.main
					source project(":Xplat").sourceSets.main
				}
			}
		}
	}
}

tasks.withType(GenerateModuleMetadata) {
	enabled = false
}